name: '1.0.$(Build.BuildId)'

trigger:
- master

variables:
- name: androidKeystoreKeyAlias
  value: key

jobs:
- job: BuildAndroid
  displayName: Build for Android
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: DownloadSecureFile@1
    displayName: get releaseKeyStore.jks
    name: releaseKeyStore
    inputs:
      secureFile: 'releaseKeyStore.jks'
  - pwsh: |
      Write-Host "##vso[task.setvariable variable=keyAlias;]$(androidKeystoreKeyAlias)"
      Write-Host "##vso[task.setvariable variable=keyPassword;]$(androidKeystoreKeyPassword)"
      Write-Host "##vso[task.setvariable variable=storeFile;]$(releaseKeyStore.secureFilePath)"
      Write-Host "##vso[task.setvariable variable=storePassword;]$(androidKeystorePassword)"
    displayName: "set keystore environment variables"
  - task: FlutterInstall@0
    displayName: Install Flutter
    inputs:
      channel: 'stable'
      version: 'latest'
  - task: FlutterBuild@0
    displayName: Build App
    inputs:
      target: 'apk'
      projectDirectory: '.'
      buildName: '$(Build.BuildNumber)'
  - task: PublishBuildArtifacts@1
    displayName: Publish artifact
    inputs:
      PathtoPublish: '$(Build.Repository.LocalPath)/build/app/outputs/apk/release'
      ArtifactName: 'apk'
      publishLocation: 'Container'

- job: BuildIOS
  displayName: Build for IOS
  pool:
    vmImage: 'macOS-latest'
  steps:
  - task: InstallAppleCertificate@2
    inputs:
      certSecureFile: 'distribution.p12'
      certPwd: '$(distribution.p12-password)'
      keychain: 'temp'
  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: 'Flutter_CI_CD__ad_hoc.mobileprovision'
  - task: FlutterInstall@0
    inputs:
      channel: 'stable'
      version: 'latest'
  - task: FlutterBuild@0
    inputs:
      target: 'ios'
      projectDirectory: '.'
      buildName: '$(Build.BuildNumber)'
      iosCodesign: false
